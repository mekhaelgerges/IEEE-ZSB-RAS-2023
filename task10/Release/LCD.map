Archive member included because of file (symbol)

e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./LCD.o
LOAD ./LCD_programe.o
LOAD ./programme.o
LOAD e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x4c4
 *(.vectors)
 .vectors       0x00000000       0x54 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000060        0x8 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000068        0x4 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000068                __vector_1
                0x00000068                __vector_12
                0x00000068                __bad_interrupt
                0x00000068                __vector_6
                0x00000068                __vector_3
                0x00000068                __vector_11
                0x00000068                __vector_13
                0x00000068                __vector_17
                0x00000068                __vector_19
                0x00000068                __vector_7
                0x00000068                __vector_5
                0x00000068                __vector_4
                0x00000068                __vector_9
                0x00000068                __vector_2
                0x00000068                __vector_15
                0x00000068                __vector_8
                0x00000068                __vector_14
                0x00000068                __vector_10
                0x00000068                __vector_16
                0x00000068                __vector_18
                0x00000068                __vector_20
 .text          0x0000006c        0x0 ./LCD.o
 .text          0x0000006c        0x0 ./LCD_programe.o
 .text          0x0000006c        0x0 ./programme.o
 .text          0x0000006c        0x0 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.main     0x0000006c       0x4e ./LCD.o
                0x0000006c                main
 .text.LCD_voidSendChar
                0x000000ba       0x3e ./LCD_programe.o
                0x000000ba                LCD_voidSendChar
 .text.LCD_voidSendCmnd
                0x000000f8       0x3e ./LCD_programe.o
                0x000000f8                LCD_voidSendCmnd
 .text.LCD_u8GoToXY
                0x00000136       0x20 ./LCD_programe.o
                0x00000136                LCD_u8GoToXY
 .text.LCD_voidInit
                0x00000156       0x38 ./LCD_programe.o
                0x00000156                LCD_voidInit
 .text.DIO_voidInit
                0x0000018e       0x18 ./programme.o
                0x0000018e                DIO_voidInit
 .text.DIO_u8SetPinDirection
                0x000001a6      0x108 ./programme.o
                0x000001a6                DIO_u8SetPinDirection
 .text.DIO_u8SetpinValue
                0x000002ae       0xfe ./programme.o
                0x000002ae                DIO_u8SetpinValue
 .text.DIO_u8GetPinValue
                0x000003ac       0x58 ./programme.o
                0x000003ac                DIO_u8GetPinValue
 .text.DIO_u8setPortDirection
                0x00000404       0x60 ./programme.o
                0x00000404                DIO_u8setPortDirection
 .text.DIO_u8SetPortValue
                0x00000464       0x28 ./programme.o
                0x00000464                DIO_u8SetPortValue
 .text.DIO_u8GetPortValue
                0x0000048c       0x34 ./programme.o
                0x0000048c                DIO_u8GetPortValue
 .text.libgcc   0x000004c0        0x0 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000004c0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000004c0        0x0 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000004c0                exit
                0x000004c0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000004c0        0x4 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000004c4                _etext = .

.data           0x00800060        0x0 load address 0x000004c4
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./LCD.o
 .data          0x00800060        0x0 ./LCD_programe.o
 .data          0x00800060        0x0 ./programme.o
 .data          0x00800060        0x0 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x0
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./LCD.o
 .bss           0x00800060        0x0 ./LCD_programe.o
 .bss           0x00800060        0x0 ./programme.o
 .bss           0x00800060        0x0 e:/imt/tools/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x00800060                PROVIDE (__bss_end, .)
                0x000004c4                __data_load_start = LOADADDR (.data)
                0x000004c4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800060        0x0
                0x00800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800060                PROVIDE (__noinit_end, .)
                0x00800060                _end = .
                0x00800060                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(LCD.elf elf32-avr)
LOAD linker stubs
